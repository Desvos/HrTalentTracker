<!DOCTYPE html>
<html lang="it">

<head>
    <meta charset="UTF-8">
    <title>Distribuzione Professioni</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <!-- MarkerCluster CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.Default.css" />

    <style>
        html,
        body {
            height: 100%;
            margin: 0;
            font-family: sans-serif;
        }

        #map {
            height: 100%;
            width: 100%;
        }

        #search-container {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 999;
            width: 100%;
            display: flex;
            justify-content: center;
            pointer-events: none;
        }

        .input-wrapper {
            background: white;
            border-radius: 33px;
            padding: 10px 2px;
            display: flex;
            align-items: center;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
            max-width: 500px;
            width: 90%;
            pointer-events: auto;
        }

        .input-wrapper input[type="text"] {
            border: none;
            outline: none;
            padding: 12px 16px;
            flex-grow: 1;
            font-size: 16px;
            border-radius: 24px;
            background: transparent;
        }

        .input-wrapper button {
            background: #10a37f;
            color: white;
            border: none;
            border-radius: 50%;
            width: 48px;
            height: 48px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
            margin-right: 8px;
            cursor: pointer;
            font-size: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background 0.3s;
        }

        .input-wrapper button:hover {
            background: #0e8e6c;
        }

        #loading-overlay {
            position: absolute;
            top: 0;
            left: 0;
            z-index: 1000;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.8);
            display: none;
            justify-content: center;
            align-items: center;
            font-size: 24px;
            font-weight: bold;
            color: #333;
        }

        .custom-label {
            background: white;
            color: #10a37f;
            padding: 4px 8px;
            border-radius: 12px;
            font-weight: bold;
            font-size: 13px;
            border: 1px solid #10a37f;
            box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>

<body>

    <div id="map"></div>

    <div id="search-container">
        <div class="input-wrapper">
            <input type="text" id="profession" placeholder="Es. Software Developer">
            <button onclick="searchProfession()" id="send-button">âž¤</button>
        </div>
    </div>

    <div id="loading-overlay">Sto elaborando...</div>

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <!-- MarkerCluster JS -->
    <script src="https://unpkg.com/leaflet.markercluster/dist/leaflet.markercluster.js"></script>

    <script>

        const surnames = "Rossi,Giordano,Conti,Esposito,Colombo,Russo,Bianchi,Ferrari,Romano,Marino,Greco,Lombardi,Ferri,Fontana,Gallo,Rizzo,Moretti,Mancini,Conti,Costa,De Luca,Rinaldi,Barbieri,Caruso,Mariani,Bertolini,Rizzi,Pugliese,Cappelli,Camposanto,Corrado,Toscano,Sorrentino,D'Angelo,Puglisi,Fabbri,Fiorentino,Neri,Pieroni,Casale,Caserta,Catalano,Celeste,Cerbone,Cerullo,D'Amico,D'Onofrio,D'Urso,Fabbiano,Falcone,Ferrante,Fiorillo,Gallo,Gentile,Giorgi,Giorgino,Lombardo,Longo,Luciano,Maiello,Mancuso,Marsico,Mazzarella,Napolitano,Napolitano,Nardone,Nastri,Nicolini,Nocera,Nola,Nuzzo,Olivieri,Pace,Palladino,Papa,Pellegrino,Pennacchio,Petrillo,Pierro,Ricciardi,Rinaldi,Rizzo,Russo,Sala,Santoro,Savarese,Sorrentino,Tarantino,Torre,Vitale,Zagaria,Zito".split(",");


        const identities = {};
        function generateIdentity(coords) {
            const slug = `${coords.lat},${coords.lon}`;
            if (identities[slug]) {
                return identities[slug];
            }
            const sex = Math.random() < 0.5 ? "male" : "female";
            const name = "ABCDEFGIJKLMNOPRSTUV"[Math.floor(Math.random() * 20)] + ".";
            const surname = surnames[Math.floor(Math.random() * surnames.length)];
            identities[slug] = {
                name,
                surname
            };
            return identities[slug];
        }

        const map = L.map('map').setView([41.8719, 12.5674], 6); // Centro Italia

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);

        const markerCluster = L.markerClusterGroup();
        map.addLayer(markerCluster);

        async function searchProfession() {
            const profession = document.getElementById('profession').value.trim();
            if (!profession) return alert("Inserisci una professione.");

            const loading = document.getElementById('loading-overlay');
            loading.style.display = 'flex';

            try {
                const res = await fetch(`http://localhost:5000/api/distribution?profession=${encodeURIComponent(profession)}`);
                const data = await res.json();

                markerCluster.clearLayers();

                const allLatLngs = [];

                data.forEach(item => {
                    const baseLat = parseFloat(item.coordinates.lat);
                    const baseLon = parseFloat(item.coordinates.lon);
                    const share = parseFloat(item.distribution);
                    const count = Math.round(share * 1000);

                    for (let i = 0; i < count; i++) {
                        const jitterLat = baseLat + (Math.random() - 0.5) * 0.0075;
                        const jitterLon = baseLon + (Math.random() - 0.5) * 0.0075;

                        const identity = generateIdentity({ lat: jitterLat, lon: jitterLon });
                        const marker = L.marker([jitterLat, jitterLon]);
                        marker.bindTooltip(`${item.place.replace(/\b\w/g, c => c.toUpperCase())}`, {
                            permanent: false,
                            direction: 'top',
                            className: 'custom-label'
                        });

                        marker.on('click', () => {
                            const seed = `${jitterLat.toFixed(5)}_${jitterLon.toFixed(5)}`;
                            const imageUrl = `https://thispersondoesnotexist.com/?seed=${seed}`;

                            const popupContent = `
    <div style="font-family: sans-serif; font-size: 14px; line-height: 1.5; max-width: 220px;">
        <div style="text-align: center; margin-bottom: 10px;">
            <img src="${imageUrl}" 
                 style="width: 80px; height: 80px; object-fit: cover; border-radius: 50%; border: 2px solid #10a37f;" 
                 alt="Foto candidato" />
        </div>
        <div style="font-weight: bold; font-size: 16px; color: #10a37f; text-align: center;">
            ${identity.name} ${identity.surname}
        </div>
        <div style="margin-top: 10px; text-align: center;">
            <button style="
                background-color: #10a37f;
                border: none;
                color: white;
                padding: 6px 12px;
                font-size: 13px;
                border-radius: 5px;
                cursor: pointer;
            " onclick="window.open('/resume/${encodeURIComponent(identity.name + "_" + identity.surname)}.pdf', '_blank')">
                Vai al curriculum
            </button>
        </div>
    </div>
`;
                            marker.unbindPopup();
                            marker.bindPopup(popupContent).openPopup();
                        });

                        marker.bindTooltip(`${identity.name} ${identity.surname}`, {
                            permanent: false,
                            direction: 'top',
                            className: 'custom-label'
                        });

                        markerCluster.addLayer(marker);
                        allLatLngs.push([jitterLat, jitterLon]);
                    }
                });

                if (allLatLngs.length > 0) {
                    const bounds = L.latLngBounds(allLatLngs);
                    map.fitBounds(bounds, { padding: [50, 50] });
                }

                loading.style.display = 'none';
            } catch (err) {
                console.error(err);
                alert("Errore nel recuperare i dati.");
                loading.style.display = 'none';
            }
        }
    </script>

</body>

</html>